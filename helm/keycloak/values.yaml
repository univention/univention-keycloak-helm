# SPDX-FileCopyrightText: 2024 Univention GmbH
# SPDX-License-Identifier: AGPL-3.0-only
---
# The global properties are used to configure multiple charts at once.
global:
  # -- Indicates wether this chart is part of a Nubus deployment.
  nubusDeployment: false

  # -- Define the domain name.
  domain: ""

  subDomains:
    # -- Subdomain for the Nubus portal.
    portal: "portal"
    # -- Subdomain for keycloak.
    keycloak: "id"

  # -- Container registry address.
  imageRegistry: "docker.software-univention.de"

  # -- Credentials to fetch images from private registry
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  #
  # imagePullSecrets:
  #   - "docker-registry"
  #
  imagePullSecrets: []

  postgresql:
    connection:
      host: ""
      port: ""

# -- PostgreSQL settings.
postgresql:
  # -- Connection parameters.
  connection:
    # -- PostgreSQL host.
    host: ""
    # -- PostgreSQL port.
    port: ""
  auth:
    # -- PostgreSQL user.
    username: ""
    # -- PostgreSQL database.
    database: ""
    # -- PostgreSQL user password.
    # password: ""
    # -- PostgreSQL password secret reference.
    existingSecret:
      name: null
      keyMapping:
        password: null

# -- Keycloak settings.
keycloak:
  auth:
    # -- Keycloak user.
    username: ""
    # -- Keycloak password.
    # password: ""
    # -- Keycloak password secret reference.
    existingSecret:
      name: null
      keyMapping:
        adminPassword: null

  # Keycloak feature settings.
  # Possible values are: account-api, account2, account3, admin-api, admin-fine-grained-authz, admin2, authorization,
  #                      ciba, client-policies, client-secret-rotation, declarative-user-profile, docker,
  #                      dynamic-scopes, fips, impersonation, js-adapter, kerberos, linkedin-oauth, map-storage, par,
  #                      preview, recovery-codes, scripts, step-up-authentication, token-exchange, update-email,
  #                      web-authn.
  features:
    # -- Enables a set of one or more features for keycloak.
    enabled:
      - "admin-fine-grained-authz"
      - "token-exchange"

    # -- Disables a set of one or more features for keycloak.
    disabled: []

# -- Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# Note: podAffinityPreset, podAntiAffinityPreset, and nodeAffinityPreset will be ignored when it's set.
affinity: {}

# -- Additional custom annotations to add to all deployed objects.
commonAnnotations: {}

# -- Additional custom labels to add to all deployed objects.
commonLabels: {}

config:
  # -- Hostname.
  # Ref.: https://www.keycloak.org/server/hostname
  # Default: {{ .Values.global.subDomains.keycloak }}.{{ .Values.global.domain }}
  hostname: ""

  # -- Proxy mode.
  # Ref.: https://www.keycloak.org/server/reverseproxy
  proxy: "edge"

  # -- Expose admin console, if set to true no Ingress path restrictions are applied.
  # Otherwise only /realms/ and /resources/ are made available to the public internet.
  # Ref.: https://www.keycloak.org/server/reverseproxy#_exposed_path_recommendations
  exposeAdminConsole: false

  # -- Enables Keycloak metrics endpoint
  # Ref.: https://www.keycloak.org/server/configuration-metrics
  enableMetrics: true

  # -- Set log level
  # Ref.: https://docs.software-univention.de/keycloak-app/latest/configuration.html#envvar-keycloak-log-level
  logLevel: "INFO"

  baseUrl: ""

# Security Context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
containerSecurityContext:
  privileged: false
  # -- Enable container privileged escalation.
  allowPrivilegeEscalation: false

  # -- Security capabilities for container.
  capabilities:
    drop:
      - "ALL"

  # -- Enable security context.
  enabled: true

  # -- Process user id.
  runAsUser: 1000

  # -- Process group id.
  runAsGroup: 1000

  # Set Seccomp profile.
  seccompProfile:
    # -- Disallow custom Seccomp profile by setting it to RuntimeDefault.
    type: "RuntimeDefault"

  # -- Mounts the container's root filesystem as read-only.
  readOnlyRootFilesystem: false

  # -- Run container as user.
  runAsNonRoot: true

# -- Array with extra environment variables to add to containers.
#
# extraEnvVars:
#   - name: FOO
#     value: "bar"
#
extraEnvVars: []

# -- Array with extra startup arguments.
extraStartupArgs: []

# -- Optionally specify extra list of additional volumes
extraVolumes: []

# -- Optionally specify extra list of additional volumeMounts.
extraVolumeMounts: []

# -- Provide a name to substitute for the full names of resources.
fullnameOverride: ""

# Container image section.
image:
  # -- Container registry address. This setting has higher precedence than global.registry.
  registry: "artifacts.software-univention.de"

  # -- Container repository string.
  repository: "nubus/keycloak"

  # -- Define an ImagePullPolicy.
  #
  # Ref.: https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  #
  # "IfNotPresent" => The image is pulled only if it is not already present locally.
  # "Always" => Every time the kubelet launches a container, the kubelet queries the container image registry to
  #             resolve the name to an image digest. If the kubelet has a container image with that exact digest cached
  #             locally, the kubelet uses its cached image; otherwise, the kubelet pulls the image with the resolved
  #             digest, and uses that image to launch the container.
  # "Never" => The kubelet does not try fetching the image. If the image is somehow already present locally, the
  #            kubelet attempts to start the container; otherwise, startup fails
  #
  imagePullPolicy: "IfNotPresent"

  # -- Define image tag.
  tag: "25.0.6-ucs6@sha256:1db8af70741bca9badeb3d5b0b145244dde1a2579fe4f966e488ce730cb07d65"

# -- Credentials to fetch images from private registry
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
#
# imagePullSecrets:
#   - "docker-registry"
#
imagePullSecrets: []

# Define and create Kubernetes Ingress.
#
# Ref.: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  # -- Enable creation of Ingress.
  enabled: true

  # -- Define the Fully Qualified Domain Name (FQDN) where application should be reachable.
  # host: ""

  # -- Define the Ingress path.
  path: "/"

  # -- Each path in an Ingress is required to have a corresponding path type.
  # Paths that do not include an explicit pathType will fail validation.
  # There are three supported path types:
  #
  # "ImplementationSpecific" => With this path type, matching is up to the IngressClass. Implementations can treat this
  #                             as a separate pathType or treat it identically to Prefix or Exact path types.
  # "Exact" => Matches the URL path exactly and with case sensitivity.
  # "Prefix" => Matches based on a URL path prefix split by /.
  #
  # Ref.: https://kubernetes.io/docs/concepts/services-networking/ingress/#path-types
  pathType: "Prefix"

  # -- The Ingress controller class name.
  ingressClassName: ""

  certManager:
    # -- Enable cert-manager.io annotaion.
    enabled: true

    # Issuer reference.
    issuerRef:
      # -- Name of cert-manager.io Issuer resource.
      name: ""
      # -- Type of Issuer, f.e. "Issuer" or "ClusterIssuer".
      kind: "ClusterIssuer"

  # -- Define custom ingress annotations.
  # annotations:
  #   nginx.ingress.kubernetes.io/rewrite-target: /
  annotations:
    nginx.org/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"

  # -- Secure an Ingress by specifying a Secret that contains a TLS private key and certificate.
  #
  # Ref.: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  tls:
    # -- Enable TLS/SSL/HTTPS for Ingress.
    enabled: true

    # -- The name of the kubernetes secret which contains a TLS private key and certificate.
    # Hint: This secret is not created by this chart and must be provided.
    secretName: ""

  paths:
    - pathType: "Prefix"
      path: "/admin"
    - pathType: "Prefix"
      path: "/realms"
    - pathType: "Prefix"
      path: "/resources"

# -- Lifecycle to automate configuration before or after startup
lifecycleHooks: {}

# -- String to partially override release name.
nameOverride: ""

# -- Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

#  Configure extra options for containers probes.
livenessProbe:
  # -- Enables kubernetes LivenessProbe.
  enabled: true
  # -- Number of failed executions until container is terminated.
  failureThreshold: 3
  # -- Delay after container start until LivenessProbe is executed.
  initialDelaySeconds: 1
  # -- Time between probe executions.
  periodSeconds: 5
  # -- Number of successful executions after failed ones until container is marked healthy.
  successThreshold: 1
  # -- Timeout for command return.
  timeoutSeconds: 2

# -- Pod Annotations.
# Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}

# -- Pod Labels.
# Ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# Pod Security Context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext:
  # -- Enable security context.
  enabled: true

  # -- If specified, all processes of the container are also part of the supplementary group
  fsGroup: 1000

  # -- Change ownership and permission of the volume before being exposed inside a Pod.
  fsGroupChangePolicy: "Always"

#  Configure extra options for containers probes.
readinessProbe:
  # -- Enables kubernetes ReadinessProbe.
  enabled: true
  # -- Delay after container start until ReadinessProbe is executed.
  initialDelaySeconds: 1
  # -- Number of failed executions until container is terminated.
  failureThreshold: 5
  # -- Time between probe executions.
  periodSeconds: 5
  # -- Number of successful executions after failed ones until container is marked healthy.
  successThreshold: 1
  # -- Timeout for command return.
  timeoutSeconds: 2

# -- Set the amount of replicas of deployment.
replicaCount: 1

# Configure resource requests and limits.
#
# Ref: https://kubernetes.io/docs/user-guide/compute-resources/
resources:
  limits:
    # -- The max number of RAM to consume.
    memory: "1Gi"
  requests:
    # -- The number of CPUs which has to be available on the scheduled node.
    cpu: "100m"
    # -- The number of RAM which has to be available on the scheduled node.
    memory: "512Mi"

# Define and create Kubernetes Service.
#
# Ref.: https://kubernetes.io/docs/concepts/services-networking/service
service:
  # -- Additional custom annotations
  annotations: {}

  # -- Enable kubernetes service creation.
  enabled: true

  # "ClusterIP" => Exposes the Service on a cluster-internal IP. Choosing this value makes the Service only reachable
  #                from within the cluster. This is the default that is used if you don't explicitly specify a type for
  #                a Service.
  # "NodePort" => Exposes the Service on each Node's IP at a static port (the NodePort). To make the node port
  #               available, Kubernetes sets up a cluster IP address, the same as if you had requested a Service of
  #               type: ClusterIP.
  # "LoadBalancer" => Exposes the Service externally using a cloud provider's load balancer.
  #
  # Ref.: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types

  # -- Choose the kind of Service, one of "ClusterIP", "NodePort" or "LoadBalancer".
  type: "ClusterIP"
  # This creates a headless service. Instead of load balancing, it creates a
  # DNS A record for each pod. This allows Infinispan to discover each other
  # via the DNS. See in combination with `KC_CACHE_STACK=kubernetes`.
  clusterIP: "None"

  # Define the ports of Service.
  # You can set the port value to an arbitrary value, it will map the container port by name.
  #
  ports:
    http:
      # -- Accessible port.
      port: 8080
      # -- Internal port.
      containerPort: 8080
      # -- service protocol.
      protocol: "TCP"
    ispn:
      # -- Accessible port.
      port: 7800
      # -- Internal port.
      containerPort: 7800
      # -- service protocol.
      protocol: "TCP"
    https:
      # -- Accessible port.
      port: 8443
      # -- Internal port.
      containerPort: 8443
      # -- service protocol.
      protocol: "TCP"

# Service account to use.
# Ref.: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- Additional custom annotations for the ServiceAccount.
  annotations: {}

  # -- Allows auto mount of ServiceAccountToken on the serviceAccount created. Can be set to false if pods using this
  # serviceAccount do not need to use K8s API.
  automountServiceAccountToken: false

  # -- Enable creation of ServiceAccount for pod.
  create: true

  # -- Additional custom labels for the ServiceAccount.
  labels: {}

#  Configure extra options for containers probes.
startupProbe:
  # -- Enables kubernetes ReadinessProbe.
  enabled: true
  # -- Delay after container start until ReadinessProbe is executed.
  initialDelaySeconds: 30
  # -- Number of failed executions until container is terminated.
  failureThreshold: 10
  # -- Time between probe executions.
  periodSeconds: 20
  # -- Number of successful executions after failed ones until container is marked healthy.
  successThreshold: 1
  # -- Timeout for command return.
  timeoutSeconds: 5

# -- In seconds, time the given to the pod needs to terminate gracefully.
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
terminationGracePeriodSeconds: ""

# Theming related settings.
theme:
  # -- URI to the base theme
  univentionTheme: ""
  # -- URL to the custom theme, set the logo in there `:root { --login-logo: url("..") no-repeat center; }`
  univentionCustomTheme: ""
  # -- Logo as SVG content.
  favIcon: ""

  # Theme colors.
  colors:
    # -- Primary color.
    primary: "#5e27dd"

    # -- Primary color 15%.
    primary15: "#e7dffa"

  # Branding texts
  texts:
    # -- Branding name.
    productName: "openDesk"

# -- Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in
# Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
#
# topologySpreadConstraints:
#   - maxSkew: 1
#     topologyKey: failure-domain.beta.kubernetes.io/zone
#     whenUnsatisfiable: DoNotSchedule
topologySpreadConstraints: []

# Set up update strategy.
#
# Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
#
# Example:
# updateStrategy:
#  type: RollingUpdate
#  rollingUpdate:
#    maxSurge: 25%
#    maxUnavailable: 25%
updateStrategy:
  # -- Set to Recreate if you use persistent volume that cannot be mounted by more than one pods to make sure the pods
  # is destroyed first.
  type: "RollingUpdate"

# -- Pod management policy.
# Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
podManagementPolicy: "OrderedReady"

...
